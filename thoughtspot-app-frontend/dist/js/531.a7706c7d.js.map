{"version":3,"file":"js/531.a7706c7d.js","mappings":"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","sources":["webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/identity.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/visit.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/directives.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/anchors.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/applyReviver.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/toJS.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Node.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Alias.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Scalar.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/createNode.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Collection.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyComment.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyString.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringify.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyPair.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/log.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Pair.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/YAMLMap.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/map.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/seq.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/string.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/null.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/bool.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/float.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/int.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/schema.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/json/schema.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/tags.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/Schema.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/Document.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/errors.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-props.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-contains-newline.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-map-includes.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-block-map.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-end.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-collection.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-scalar.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-node.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-doc.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/composer.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst-scalar.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst-stringify.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst-visit.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/lexer.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/line-counter.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/parser.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/public-api.js","webpack://app/./node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/index.js"],"sourcesContent":["const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx, true));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n","import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atMapIndent && bv.type !== 'block-seq') {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n"],"names":["ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","anchor","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","cd","visit_","contents","Object","freeze","key","path","ctrl","callVisitor","replaceNode","concat","i","items","length","ci","splice","ck","cv","value","async","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","parent","pt","Error","escapeChars","escapeTagName","tn","replace","ch","Directives","constructor","yaml","tags","this","docStart","docEnd","defaultYaml","defaultTags","clone","copy","atDocument","res","version","atNextDocument","explicit","add","line","onError","parts","trim","split","name","shift","handle","prefix","isValid","test","tagName","source","verbatim","slice","suffix","match","decodeURIComponent","error","String","tagString","tag","entries","startsWith","substring","toString","doc","lines","tagEntries","tagNames","_key","keys","some","push","join","anchorIsValid","sa","JSON","stringify","msg","anchorNames","root","anchors","Set","findNewAnchor","exclude","has","createNodeAnchors","aliasObjects","sourceObjects","prevAnchors","onAnchor","setAnchors","ref","get","applyReviver","reviver","obj","val","Array","isArray","len","v0","v1","undefined","k","from","delete","set","call","toJS","arg","ctx","map","v","toJSON","data","aliasCount","count","onCreate","keep","Number","NodeBase","type","defineProperty","create","getPrototypeOf","getOwnPropertyDescriptors","range","mapAsMap","maxAliasCount","TypeError","mapKeyWarned","values","super","resolve","found","_arg","ReferenceError","getAliasCount","_onComment","_onChompKeep","src","options","verifyAliasOrder","implicitKey","item","c","kc","vc","Math","max","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","defaultTagPrefix","findTagObject","filter","t","tagObj","find","format","identify","createNode","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onTagObj","iterator","nodeClass","default","collectionFromPath","isInteger","a","keepUndefined","isEmptyPath","next","done","configurable","enumerable","writable","it","addIn","rest","deleteIn","getIn","keepScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","hasIn","setIn","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","prev","end","overflow","escStart","escEnd","consumeMoreIndentedLines","j","fold","start","getFoldOptions","isBlock","containsDocumentMarker","lineLengthOverLimit","indentLength","limit","strLen","doubleQuotedString","json","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockEndNewlines","RegExp","blockString","onComment","onChompKeep","blockQuote","commentString","forceBlockIndent","literal","chomp","endStart","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","indentSize","header","body","plainString","actualString","indentStep","inFlow","compat","stringifyString","ss","_stringify","_type","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","flowCollectionPadding","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","repeat","getTagObject","testMatch","stringifyProps","props","resolvedAliases","o","stringifyPair","allNullValues","keyComment","explicitKey","vsb","vcb","valueComment","keyCommentDone","chompKeep","spaceBefore","flow","valueCommentDone","valueStr","ws","cs","vs0","nl0","hasNewline","hasPropsLine","sp0","warn","logLevel","warning","process","emitWarning","console","MERGE_KEY","merge","description","addToJSMap","addMergeToJSMap","isMergeKey","mergeValue","srcMap","prototype","hasOwnProperty","addPairToJSMap","jsKey","stringKey","stringifyKey","jsValue","strCtx","inStringifyKey","strKey","jsonStr","createPair","_","pair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","fcPadding","reqNewline","linesAtValue","iv","reduce","sum","ic","trimStart","findPair","YAMLMap","replacer","sortMapEntries","sort","overwrite","_pair","sortEntries","findIndex","del","Type","YAMLSeq","idx","asItemIndex","seq","string","nullTag","boolTag","sv","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify","intOct","_onError","int","intHex","stringifyJSON","jsonScalars","jsonError","binary","Uint8Array","Buffer","atob","buffer","charCodeAt","buf","btoa","s","fromCharCode","ceil","resolvePairs","cn","createPairs","iterable","pairs","YAMLOMap","bind","omap","seenKeys","boolStringify","boolObj","trueTag","falseTag","f","sign","intBin","YAMLSet","keepPair","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","unshift","padStart","intTime","floatTime","timestamp","Date","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","schema$1","schema$2","tagsByName","bool","null","coreKnownTags","getTags","customTags","schemaName","addMergeTag","schemaTags","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","stringifyDocument","hasDirectives","dir","contentComment","dc","Document","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","stringKeys","uniqueKeys","_directives","setSchema","assertCollection","createAlias","keyToStr","asStr","anchorPrefix","jsonArg","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","resolveProps","tokens","indicator","parentIndent","startOnNewline","atNewline","hasSpace","commentSep","reqSpace","tab","newlineAfterProp","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveBlockMap","composeNode","composeEmptyNode","bm","NodeClass","atRoot","commentEnd","collItem","keyProps","atKey","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockSeq","bs","resolveEnd","blockMsg","resolveFlowCollection","fcName","coll","prevItemComment","loop","endRange","expectedEnd","ce","ee","cePos","toUpperCase","resolveCollection","CN","Coll","composeCollection","tagToken","nl","lastProp","expType","kt","resolveBlockScalar","scalar","parseBlockScalarHeader","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","ts","first","m","line0","resolveFlowScalar","rel","plainValue","singleQuotedValue","doubleQuotedValue","valueEnd","re","badChar","foldLines","exec","lastIndex","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","e","r","N","L","P","ok","fromCodePoint","composeScalar","findScalarTagByName","findScalarTagByTest","matchWithTest","emptyScalarPosition","before","isSrcToken","composeAlias","alias","composeDoc","opts","contentEnd","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","atDirectives","decorate","afterDoc","apply","streamInfo","compose","forceDoc","endOffset","resolveAsScalar","createScalarToken","context","he","head","addEndtoBlockProps","setScalarValue","afterKey","setBlockScalarValue","setFlowScalarValue","oa","tok","cst","stringifyToken","stringifyItem","_visit","field","itemAtPath","index","parentCollection","BOM","DOCUMENT","FLOW_END","prettyToken","tokenType","isEmpty","hexDigits","tagChars","flowIndicatorChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","lex","incomplete","hasChars","parseNext","atLineEnd","charAt","continueScalar","dt","getLine","setNext","state","peek","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","pushCount","dirEnd","pushSpaces","pushNewline","sp","ch0","ch1","pushIndicators","pushUntil","atFlowEndMarker","quote","qb","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","parse","lexeme","step","pop","sourceToken","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","lineEnd","bv","startBlockValue","atIndentedComment","atMapIndent","atNextItem","fs","flowScalar","parseOptions","lineCounter","parseAllDocuments","parser","composer","docs","forEach","empty","_doc","_reviver","round"],"sourceRoot":""}